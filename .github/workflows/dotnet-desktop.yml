name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
   runs-on: ${{ matrix.os }}
   strategy:
      matrix:
        configuration: [Release]
        os: [ubuntu-latest, macos-latest, windows-latest]
   env:
      Solution_Name: src/Desktop.AI.app/Desktop.AI.app.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Wap_Project_Directory: src/Desktop.AI.app/Desktop.AI.app                     # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      Wap_Project_Path: src/Desktop.AI.app/Desktop.AI.app/Desktop.AI.app.csproj    # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

   steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
  
    # Install the .net core electron
    - name: Install .net 5 for Electron
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    #- name: Setup MSBuild.exe
    #  uses: microsoft/setup-msbuild@v1.0.2
       
    # Build
    - name: Build
      run: dotnet build src/Desktop.AI.app/Desktop.AI.app.sln --configuration Release
      
    - name: Restore Tools
      run: dotnet tool restore
      working-directory: src/Desktop.AI.app/Desktop.AI.app
          
    - name: Build Electron Macos
      if: matrix.os == 'macos-latest'
      run: dotnet electronize build /target osx
      working-directory: src/Desktop.AI.app/Desktop.AI.app
      
    - name: Build Electron Linux (ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: dotnet electronize build /target linux
      working-directory: src/Desktop.AI.app/Desktop.AI.app
    
    - name: Build Electron Windows
      if: matrix.os == 'windows-latest'
      run: dotnet electronize build /target win
      working-directory: src/Desktop.AI.app/Desktop.AI.app
    
    - name: Create Release
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: ${{ github.run_number }}
        
  #  - name: Upload build artifacts Windows
  #    if: matrix.os == 'windows-latest'
  #    uses: action/upload-artifacts@v3
  #    with: 
  #      name: Windows-Release
  #      path: ScottGeek\Desktop.AI\src\Desktop.AI.app\Desktop.AI.app\obj\desktop\win\bin\*.*
        
    
